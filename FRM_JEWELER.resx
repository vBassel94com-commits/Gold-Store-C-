<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAVpJREFUWEft
        ls9KAzEQxnsRwQfw5sGrD6Ki4EErior/DlKlk4AP572S5OTBi57Fiw/Q7FZr3e1Evm0XdrWy3ViF/CCQ
        nW8y32xC2G0EAoF/QXpD85j+mCprSul12suRpudIiRZCE7FGHnD+S/eWVhCqRnp3MRcZ8RBpkfIYWEWH
        kL4kUnKLc9+w5olrLECqBr/9Jhd6RcGEny8hFXANcs4Aue+xFvuQpqPYhLyCNMKbeQaf6QYXLm3CannE
        sbG5knuQ6qWsiV8zz4iN3HVGMPzg0R/NDZ0jzS+xpmbO+NPcanEG2T98z4/ZNNt2NxLe+jZkv8z0CKwS
        J2yUu2rUtEas87yHWMLXj5BeLzB3b+yM+s4ckjuSNY7lmiABqR6+M8/w1oTVdMoFc+ZyB1IBzl3lnHET
        RkhI1fgTH6Oubi1yoftY0TZCE8FOPMad6yWEpmOmPySBQMAvjcYQ7dSZ6ly45r8AAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFU76ydVK/8GAAAAACQkSQcrK0QeJDFJFQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABVOfESlqrOTq6+1OlkV9f/ydHy/9zp
        7v+su83809v6Y7+//wQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAn67MiNLf6P/v/P3/jILz/+r2
        /P/v/P3/wdDb/9Lb+f/P2vq/bND7RwAAAAAAAAAAAAAAAAAAAAAAAAAA1d/0GLTD4/LV5Ov/6fHz/7a0
        7v/k6e7/4e7y/6e2zf/S2/n/0tv5/9Hb+bMAAAAAAAAAAAAAAAAAAAAAV878SXzR+9LJ2vj/xtHu/6Cx
        0v+Dptj/jaHI/7bA3v/S2/n/vsfk/9Lb+f/S2/n/09v4RgAAAAAAAAAAAAAAAFXG/xK62Prs1Nz5/8zV
        9P+Vs97/i7Dg/5G14/+5xOX/0dr4/7vG0//I09//xc/h/8LL5KsAAAAAAAAAAAAAAADM3f8P4uj7/9Xd
        +f+gtNr/jrDq/4uq6v+Ose7/gpnJ/7vD2f/g7PH/e3bP/8fQ5f/I09zzAAAAAAAAAAAAAAAA1dX/DNPc
        +f/S2/n/maXH/2NzuP9sfcX/a3vD/2x1rP+7xdr/ydLk/4mC0/+YmNL/z9ri9AAAAAAAAAAAAAAAAAAA
        AADS2/nb0tv5/6210/8rLEn/KStH/ywvS/9YX33/0Nn3/8DJ3f/M1eP/yNLi/8XO56IAAAAAAAAAAAAA
        AAAAAAAA0dz5e9Lb+f/Fzuv/NzpX/ykrR/8pK0f/nKLB/9Lb+f/S2/n/1N35/9Xe+f3V2vowAAAAAAAA
        AAAAAAAAAAAAAMzm/wrS2/nQ0tv5/8/Y9f+rsc//q7PQ/9Ha+P/S2/n/0tv5/9Xd+f/Y3vqVWD7tHQAA
        AAAAAAAAAAAAAAAAAAAAAAAA1d/0GNLb+cXS2/n/0tv5/9Lb+f/S2/n/0tv5/9Lb+f7S2/qPTcz/Ck5O
        7i4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8C0dr5U9Lb+aXS2/nI09r4w9Pc+pDQ2/oxAAAAABq8
        8Iwau/CLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAgP8CAKr/AwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA+D8AAOAPAADgBwAAwAcAAMADAADAAwAAwAMAAMAD
        AADgBwAA4AcAAPAPAAD8MwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFQ+
        76pVQOoYAAAAAAAAAAAAAAAAAAAAAC0tSxFnbZhSbHaVe2t8lmtJT2cqAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAVD/uSVUr/wYAAAAAYGaCLY+et8puasb8Tz7M/6Wi7f/v/P3/6/j5/8bT2f+tvMz9lKG5387Y
        9RoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAARERmD4+dtNPAy9f/7/z9/4h98/9UPu7/w8b5/+/8/f/v/P3/7Pn6/+/8
        /f+grb7/0tv599Lb+o3X1/8TAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAG59ljOcqbz47Pr7/+/8/f/v/P3/oJz1/1Q+7v/b4/v/7/z9/+/8
        /f/v/P3/7/z9/56rvv/S2/n/0tv5/9Lb+dnQ3fgmWMr/HQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYYYQdqbfG/e/8/f/v/P3/7/z9/+76+//Gy/j/eGrx/+35
        /P/v/P3/7/z9/+/8/f/v/P3/m6i8/9Lb+f/S2/n/0tv5/8rb+fVgzfrdgP//AgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMrS7560xNX/7/z9/+/8/f/v/P3/6vHx/8bE
        7/9hTu7/5+ns/+75+f/v/P3/7/z9/+/8/f+RnrX/0tv5/9Lb+f/S2/n/0tv5/9Lb+unW3vcfAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADS2vpg0tv5/6231v+ntcj/4/D0/+32
        9//o6ur/2tzq/7q86v/l5+r/6e3t/+37/P+5xtD/i5eu/7K72P/S2/n/0tv5/9Lb+f/S2/n/0tv5/9Lb
        +cf///8BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYzvpoWs37ubfY+ePN2vn/0tv5/9Ha
        +P+ntNH/n6rD/5Kr0f95odv/eaHb/3+l3P+IlK7/hY6o/7O82f/S2/n/0tv5/9Lb+f/S2/n/0tv5/9Lb
        +f/S2/n/0tv5/9Hb+E0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFrN+uFZzfv/jNP6/6fT
        9//S2/n/0tv5/9Lb+f/S2/n/hZe//3+fzv+BoM3/fZrI/5ihwv/S2/n/0tv5/9Lb+f/S2/n/naO//7C3
        0//S2/n/0tv5/9Lb+f/S2/n/0tv5xgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWs36YHPR
        ++e+2fn/0tv5/9Lb+f/S2/n/0tv5/6Cuzv+St+X/k7vs/4mt3f+UvO3/iaTN/7rE4v/S2/n/0tv5/9Lb
        +f+bo7j/z9rf/5ees/+epL//pq/J/8jP7f/S2/n80970FwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA0tv589Lb+f/d5Pv/0tv5/9Lb+f+6w+H/krTg/5C25v+Gqdj/hqnY/4aq2f+UvO3/iZzA/9Lb
        +f/S2/n/zdb0/4+Wq//v/P3/7/z9/+f19//i7vH/r7jF/6Cnv//P2fdfAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAM/f/xDT3Pn/4ef7/9Tc+f/S2/n/zNXz/4Wawf+Qtuj/h6Pu/4ur6f+Jrd3/jK3t/4il
        7f+Cos//l6XI/9Lb+f+RmK7/6PX3/+/8/f+5wdP/Y16u/9Tf6P/v/P3/3Ofr/4iQpMgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA09r5Kdnh+v/+////3OP6/9Lb+f+rtNP/e57O/3+Y4/+UvO3/hZ/t/4ai
        7f+Nru3/krnt/3WJ0v9yibD/w8vp/7fBy//v/P3/xs/e/356y/9VQ9//jYzO/9bg6f/v/P3/q7TA8QAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADW3vcf0tv5/9Td+f/S2/n/0tv5/7XA3/9nd57/YmbM/2+H
        v/9zg9//d4Tt/26Axv+Dotz/V1W+/3mJrf+9xOP/v8nS/+/8/f+VmcL/jIbU/3Jg3P9wasr/p67Q/+/8
        /f+yvMfxAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN/f/wjS2/n+0tv5/9Lb+f/S2/n/0tv5/4GI
        pf9MV4L/YHCs/0xYhP9lfaT/TlqP/3GC0v9ERoD/vsbk/9Lb+f+UnLH/7vv8/8zX4f+ytN//lpbS/5GO
        1P/l8fX/6/j5/5ihsskAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANLb+dnS2/n/0tv5/9Lb
        +f/S2/n/e4Kf/ykrR/8wM1H/KStH/ykrR/8pK0f/Njxa/yosSf+mrMv/0tv5/8XN6/+kq7//1OHl/+/8
        /f/v/P3/7/z9/9Hc4v+ttcj/vsjjSgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0tv6jtLb
        +f/S2/n/0tv5/9Lb+f+bosD/KStH/ykrR/8pK0f/KStH/ykrR/8pK0f/ODxY/6asy//S2/n/0tv5/9Lb
        +f+1vNf/o6rD/6GpwP+jq8T/vMTg/9Lb+fPb2/8HAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADT3fo00tv5/tLb+f/S2/n/0tv5/56kwv8pK0f/KStH/ykrR/8pK0f/KStH/ykrR/9WW3f/0tv5/9Lb
        +f/S2/n/0tv5/9Lb+f/S2/n/0tv5/9Lb+f/S2/n/0tv5nQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADS2/mx0tv5/9Lb+f/S2/n/0tv5/3B1kf8rLUj/KStH/ykrR/8pK0f/KStH/3yB
        nv/S2/n/0tv5/9Lb+f/S2/n/0tv5/9Lb+f/b4vr/3OP6/9Xe+frT2/gjAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAANPb+CPS2/nw0tv5/9Lb+f/S2/n/0tv5/8fP7f+qsc7/bXKP/3F2
        kv+co8H/0Nn4/9Lb+f/S2/n/0tv5/9Lb+f/S2/n/0tv5/93k+v/e5fv/0tr5fQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANLb+U/S2/n90tv5/9Lb+f/S2/n/0tv5/9Lb
        +f/S2/n/0tv5/9Lb+f/S2/n/0tv5/9Lb+f/S2/n/0tv5/9Lb+f/S2/n/0tv5/9Lb+baq//8DVTnxElU+
        7WMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANPc+VfS2/n20tv5/9Lb
        +f/S2/n/0tv5/9Lb+f/S2/n/0tv5/9Lb+f/S2/n/0tv5/9Lb+f/S2/n/0tv5/9Lb+f/R3PmtzOb/CgAA
        AABYO+saVD/tggAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANDZ
        +jbS2/nc0tv5/9Lb+f/S2/n/0tv5/9Lb+f/S2/n/0tv5/9Lb+f/S2/n/0tv5/9Lb+f/S2/n509v5f///
        /wEAAAAAF7v0LRm68DQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAANXV/wbS2/hy0tv549Lb+f/S2/n/0tv5/9Lb+f/S2/n/0tv5/9Lb+f/S2/n30tv5qdPb
        +CMAAAAAAAAAABq77h4avPH6Gbzx/hq77zEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8B0dv6MtLb+HLT3PqQ0dv5qNLb+Z3R2/mA09z5UdHR
        /wsAAAAAAAAAAAAAAAAAAAAAGLzwVBq88fAZvPH3Gr7yJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGLbzFRS49RkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////////////////7/////4A///4AD//8AAf/+AAB//AAAf/wA
        AD/wAAA/4AAAH/AAAB/wAAAf8AAAD/AAAA/wAAAP8AAAD/AAAB/wAAAf+AAAH/gAAD/8AAB//gAAf/8A
        AO//gAP//+AHn//8P5//////////////////////
</value>
  </data>
</root>